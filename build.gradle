buildscript {
    repositories {
        maven {
            name 'central'
            url 'https://maven.thorfusion.com/artifactory/central/'
        }
    }
    dependencies {
        classpath ('com.anatawa12.forge:ForgeGradle:1.2-1.0.+') {
            changing = true
        }
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:latest.release"
    }
}

repositories {
    maven {
        name 'ic2'
        url 'https://maven.thorfusion.com/artifactory/ic2/'
    }
    maven {
        name 'central'
        url 'https://maven.thorfusion.com/artifactory/central/'
    }

}

apply plugin: 'forge'
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: "com.jfrog.artifactory"
apply plugin: "maven-publish"
apply plugin: "maven"

// Define properties file
ext.configFile = file "build.properties"

configFile.withReader {
    // Load config. It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}


dependencies {
    compile "codechicken:CodeChickenLib:${config.minecraft_version}-${config.CCLIB_version}:dev"
    compile "codechicken:ForgeMultipart:${config.minecraft_version}-${config.FMP_version}:dev"
    compile "codechicken:NotEnoughItems:${config.minecraft_version}-${config.NEI_version}:dev"
    compile "codechicken:CodeChickenCore:${config.minecraft_version}-${config.CCC_version}:dev"
    compile "net.industrial-craft:industrialcraft-2:2.2.828-experimental:dev"
    compile "mcp.mobius.waila:Waila:1.5.10_1.7.10:dev"
    // compile "com.gregoriust.gregtech:gregtech_1.7.10:6.15.00:dev"
}

version = "${config.minecraft_version}-${config.mod_version}"
group= "blusunrize"
archivesBaseName = "ImmersiveEngineering"


sourceCompatibility = 1.8
targetCompatibility = 1.8

minecraft {
    version = config.minecraft_version + "-" + config.forge_version
    replaceIn "blusunrize/immersiveengineering/ImmersiveEngineering.java"
    replace "GRADLE_MODVERSION", config.mod_version
}

dependencies {
	compile fileTree(dir: 'libs', include: '*.jar')
}



processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        attributes 'FMLAT': 'ImmersiveEngineering_at.cfg'
    }
}

task deobfJar(type: Jar) {
	from sourceSets.main.output
	classifier = 'deobf'
	manifest {
		attributes 'FMLAT': 'ImmersiveEngineering_at.cfg'
	}
}

task apiZip(type: Zip) {
	from(sourceSets.main.java) {
		include "blusunrize/immersiveengineering/api/**"
		}	
	classifier = 'api'
}

task apiJar(type: Jar) {
    from(sourceSets.main.java) {
        include "blusunrize/immersiveengineering/api/**"
    }
    classifier = 'api'
}

artifacts {
	archives deobfJar
	archives apiZip
    archives apiJar
}



artifactory {
    contextUrl = System.getenv("MAVEN_URL")
    publish {
        repository {
            repoKey = 'thorfusion'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true
        }
        defaults {
            publications('mavenJava')
        }
        publishBuildInfo = false
        publishArtifacts = true
        publishPom = true
    }
    resolve {
        repository {
            repoKey = 'central'
            username = System.getenv("MAVEN_USERNAME")
            password = System.getenv("MAVEN_PASSWORD")
            maven = true

        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = rootProject.name
            groupId = project.group
            version = project.version
            artifacts = [apiJar, apiZip, deobfJar, jar]
        }
    }
}
